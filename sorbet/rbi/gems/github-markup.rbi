# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/github-markup/all/github-markup.rbi
#
# github-markup-4.0.1

module GitHub
end
module GitHub::Markup
  def can_render?(filename, content, symlink: nil); end
  def command(symbol, command, regexp, languages, name, &block); end
  def language(filename, content, symlink: nil); end
  def markup(symbol, gem_name, regexp, languages, opts = nil, &block); end
  def markup_impl(symbol, impl); end
  def markup_impls; end
  def markups; end
  def preload!; end
  def render(filename, content, symlink: nil, options: nil); end
  def render_s(symbol, content, options: nil); end
  def renderer(filename, content, symlink: nil); end
  extend GitHub::Markup
end
class GitHub::Markup::Implementation
  def file_ext_regexp; end
  def initialize(regexp, languages); end
  def languages; end
  def load; end
  def match?(filename, language); end
  def regexp; end
  def render(filename, content, options: nil); end
end
class GitHub::Markup::CommandError < RuntimeError
end
class GitHub::Markup::CommandImplementation < GitHub::Markup::Implementation
  def block; end
  def call_block(rendered, content); end
  def command; end
  def execute(command, target); end
  def initialize(regexp, languages, command, name, &block); end
  def name; end
  def render(filename, content, options: nil); end
  def sanitize(input, encoding); end
end
class GitHub::Markup::GemImplementation < GitHub::Markup::Implementation
  def gem_name; end
  def initialize(regexp, languages, gem_name, &renderer); end
  def load; end
  def name; end
  def render(filename, content, options: nil); end
  def renderer; end
end
class GitHub::Markup::Markdown < GitHub::Markup::Implementation
  def initialize; end
  def load; end
  def name; end
  def render(filename, content, options: nil); end
  def try_require(file); end
end
class GitHub::Markup::RDoc < GitHub::Markup::Implementation
  def initialize; end
  def name; end
  def render(filename, content, options: nil); end
end
module GitHub::Markups
end
