"""
A backlink.
"""
type Backlink implements Node {
  """
  ID of the object.
  """
  id: ID!

  """
  A note.
  """
  note: Note!

  """
  A title of note.
  """
  title: String!
}

"""
The connection type for Backlink.
"""
type BacklinkConnection {
  """
  A list of edges.
  """
  edges: [BacklinkEdge]

  """
  A list of nodes.
  """
  nodes: [Backlink]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BacklinkEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Backlink
}

"""
A mutation error.
"""
union CreateNoteError = DuplicatedNoteError | MutationError

"""
Autogenerated input type of CreateNote
"""
input CreateNoteInput {
  body: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
}

"""
Autogenerated return type of CreateNote
"""
type CreateNotePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [CreateNoteError!]!
  note: Note
}

"""
A mutation error.
"""
union DeleteNoteError = MutationError

"""
Autogenerated input type of DeleteNote
"""
input DeleteNoteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteNote
"""
type DeleteNotePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [DeleteNoteError!]!
}

"""
A error when is occurred that a title of updated note is duplicated.
"""
type DuplicatedNoteError {
  """
  A error message.
  """
  message: String!

  """
  An original note.
  """
  originalNote: Note!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
A link.
"""
type Link implements Node {
  """
  ID of the object.
  """
  id: ID!

  """
  A note.
  """
  note: Note!
}

"""
The connection type for Link.
"""
type LinkConnection {
  """
  A list of edges.
  """
  edges: [LinkEdge]

  """
  A list of nodes.
  """
  nodes: [Link]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LinkEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Link
}

"""
Modifying data operations.
"""
type Mutation {
  """
  Creates a note.
  """
  createNote(
    """
    Parameters for CreateNote
    """
    input: CreateNoteInput!
  ): CreateNotePayload

  """
  Deletes a note.
  """
  deleteNote(
    """
    Parameters for DeleteNote
    """
    input: DeleteNoteInput!
  ): DeleteNotePayload

  """
  Updates a note.
  """
  updateNote(
    """
    Parameters for UpdateNote
    """
    input: UpdateNoteInput!
  ): UpdateNotePayload
}

"""
A mutation error.
"""
type MutationError {
  """
  An error message.
  """
  message: String!
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
A note.
"""
type Note implements Node {
  """
  A list of backlinks associated with the note.
  """
  backlinks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BacklinkConnection!

  """
  A content of the note.
  """
  content: NoteContent!

  """
  Identifies the primary key from the database.
  """
  databaseId: String!
  id: ID!

  """
  A list of links associated with the note.
  """
  links(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LinkConnection!

  """
  Identifies the date and time when the object was modified.
  """
  modifiedAt: ISO8601DateTime

  """
  A title of the note.
  """
  title: String!
}

"""
The connection type for Note.
"""
type NoteConnection {
  """
  A list of edges.
  """
  edges: [NoteEdge]

  """
  A list of nodes.
  """
  nodes: [Note]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
A content of the note.
"""
type NoteContent implements Node {
  """
  A body of the content.
  """
  body: String!

  """
  A body of the content which is rendered as HTML.
  """
  bodyHtml: String!
  id: ID!
}

"""
An edge in a connection.
"""
type NoteEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Note
}

input NoteOrder {
  direction: OrderDirection!
  field: NoteOrderField!
}

enum NoteOrderField {
  """
  Create date
  """
  CREATED_AT

  """
  Modify date
  """
  MODIFIED_AT
}

enum OrderDirection {
  """
  Ascending
  """
  ASC

  """
  Descending
  """
  DESC
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
Querying operations.
"""
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!

  """
  Fetches the authenticated user.
  """
  viewer: User
}

"""
A mutation error.
"""
union UpdateNoteError = DuplicatedNoteError | MutationError

"""
Autogenerated input type of UpdateNote
"""
input UpdateNoteInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  title: String!
}

"""
Autogenerated return type of UpdateNote
"""
type UpdateNotePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UpdateNoteError!]!
  note: Note
}

"""
A user.
"""
type User implements Node {
  """
  ID of the object.
  """
  id: ID!

  """
  Fetches a note associated with the user.
  """
  note(
    """
    Identifies the primary key from the database.
    """
    databaseId: String!
  ): Note

  """
  Fetches a list of notes associated with the user.
  """
  notes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    A note order.
    """
    orderBy: NoteOrder!

    """
    A search keyword.
    """
    q: String
  ): NoteConnection!
}
